{"version":3,"sources":["components/card/card-components.jsx","components/card-list/card-list-components.jsx","components/search-box/search-box-component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","coder","name","email","CardList","map","id","SearchBox","placeholder","handlechange","type","onChange","App","e","setState","searchField","target","value","state","bind","fetch","then","response","json","users","this","filteratedCoder","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAEaA,EAAQ,SAACC,GAAD,OAEjB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,QACLC,IAAK,iEACJ,6BAAKH,EAAMI,MAAMC,OACjB,4BAAIL,EAAMI,MAAME,YCLXC,G,MAAW,SAAAP,GACpB,OAAO,qBAAKC,UAAU,YAAf,SAGJD,EAAMI,MAAMI,KAAI,SAAAJ,GAAK,OAChB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMK,WCNhBC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAcC,EAAjB,EAAiBA,aAAjB,OACrB,uBACEX,UAAU,SACVY,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCsCDG,E,kDAvCb,aAAc,IAAD,8BACX,gBAiBDH,aAAc,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAjBrC,EAAKC,MAAQ,CACZjB,MAAQ,GACRc,YAAY,IAGb,EAAKN,aAAe,EAAKA,aAAaU,KAAlB,gBAPT,E,qDAWb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,OAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAACb,MAAMuB,Y,oBAStC,WAAS,IAAD,EACuBC,KAAKP,MAA3BjB,EADD,EACCA,MAAOc,EADR,EACQA,YACRW,EAAkBzB,EAAM0B,QAAO,SAAA1B,GAAK,OACvCA,EAAMC,KAAK0B,cAAcC,SAASd,EAAYa,kBAEjD,OACA,sBAAK9B,UAAU,MAAf,UACE,mDACA,cAAC,EAAD,CAAYU,YAAY,OACxBC,aAAegB,KAAKhB,eACpB,cAAC,EAAD,CAAUR,MAAOyB,W,GAlCLI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2b00f6a5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card-style.css';\r\nexport const Card  = (props) =>(\r\n\r\n    <div className=\"card-container\">\r\n        <img \r\n        alt=\"coder\"\r\n       src={'https://robohash.org/${props.coder.id}?set=set2&size=180x180'}/>\r\n        <h1>{props.coder.name}</h1>\r\n        <p>{props.coder.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport '../card/card-components';\r\nimport { Card } from '../card/card-components';\r\nimport './card-list-style.css';\r\nexport const CardList = props =>{\r\n    return <div className=\"card-list\">\r\n\r\n{\r\n       props.coder.map(coder => (\r\n            <Card key={coder.id} coder={coder}/>\r\n         ))\r\n     }\r\n    </div>\r\n}","import React  from \"react\";\r\nimport './search-box-style.css';\r\n\r\nexport const SearchBox = ({ placeholder , handlechange   }) => (\r\n    <input\r\n      className=\"search\"\r\n      type='search'\r\n      placeholder={placeholder}\r\n      onChange={handlechange}\r\n    />\r\n);","import React , {Component} from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport {CardList } from './components/card-list/card-list-components';\nimport {SearchBox} from './components/search-box/search-box-component';\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n     coder : [],\n     searchField:''\n    };\n\n    this.handlechange = this.handlechange.bind(this);\n    \n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json()\n    .then(users => this.setState({coder:users}) )\n    )\n  }\n\n   handlechange =(e) => {\n    this.setState({searchField: e.target.value});\n   }\n\n\n  render(){\n    const {coder, searchField} = this.state;\n    const filteratedCoder = coder.filter(coder =>\n       coder.name.toLowerCase().includes(searchField.toLowerCase())\n      );\n    return(\n    <div className=\"App\">\n      <h1>Active Programmer</h1>\n      <SearchBox  placeholder='name'\n      handlechange= {this.handlechange} />\n      <CardList coder={filteratedCoder}>   \n     </CardList>\n  \n  </div>)\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}